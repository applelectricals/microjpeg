import { pgTable, text, timestamp, serial, varchar, integer, boolean, jsonb, decimal } from 'drizzle-orm/pg-core';

export const users = pgTable('users', {
  id: serial('id').primaryKey(),
  email: varchar('email', { length: 255 }).notNull().unique(),
  password: varchar('password', { length: 255 }),
  createdAt: timestamp('created_at').defaultNow(),
  updatedAt: timestamp('updated_at').defaultNow()
});

export const sessions = pgTable('sessions', {
  id: serial('id').primaryKey(),
  userId: integer('user_id').references(() => users.id),
  token: varchar('token', { length: 255 }),
  createdAt: timestamp('created_at').defaultNow()
});

export const apiKeys = pgTable('api_keys', {
  id: serial('id').primaryKey(),
  key: varchar('key', { length: 255 }).unique(),
  userId: integer('user_id').references(() => users.id),
  createdAt: timestamp('created_at').defaultNow()
});

export const uploads = pgTable('uploads', {
  id: serial('id').primaryKey(),
  userId: integer('user_id'),
  filename: varchar('filename', { length: 255 }),
  size: integer('size'),
  createdAt: timestamp('created_at').defaultNow()
});

export const compressionJobs = pgTable('compression_jobs', {
  id: serial('id').primaryKey(),
  userId: integer('user_id'),
  status: varchar('status', { length: 50 }),
  inputFile: varchar('input_file', { length: 255 }),
  outputFile: varchar('output_file', { length: 255 }),
  createdAt: timestamp('created_at').defaultNow()
});
